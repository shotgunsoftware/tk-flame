# Copyright (c) 2014 Shotgun Software Inc.
# 
# CONFIDENTIAL AND PROPRIETARY
# 
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit 
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your 
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights 
# not expressly granted therein are reserved by Shotgun Software Inc.

# Metadata defining the behaviour and requirements for this engine

# expected fields in the configuration file for this engine
configuration:
    
    debug_logging:
        type: bool
        description: Controls whether debug messages should be emitted to the logger
        default_value: false

    project_switching:
        type: bool
        description: Hint about the possibility to switch project
        default_value: false

    project_startup_hook:
        type: hook
        default_value: "{self}/project_startup.py"
        description: Contains the logic for determining and creating the workspace and 
                     users to use when launching into a Flame project. 
    
    flame_batch_publish_type:
        type: tank_type
        description: The publish type associated with Flame batch scripts. This parameter is used
                     to help the Flare launch process auto-load a batch script from Shotgun at startup.
        default_value: "Flame Batch File"
    
    backburner_manager:
        type: str
        default_value: ""
        description: The host where the backburner manager is located. All backburner
                     jobs generated by the flame engine will be dispatched to this server.
                     This setting is only supported on Flame 2016.1 and above. If this
                     value is not specified, the system default will be used.
    
    backburner_shared_tmp:
        type: str
        default_value: "/tmp"
        description: A folder where the Flame engine can put temporary files. This folder 
                     needs to be accessible from all backburner nodes, so if you are running
                     a larger backburner setup, this path must be some sort of shared network
                     location. 

    run_at_startup:
        type: list
        description: "Controls what apps will run on startup.  This is a list where each element
                     is a dictionary with two keys: 'app_instance' and 'name'.  The app_instance
                     value connects this entry to a particular app instance defined in the
                     environment configuration file.  The name is the menu name of the command
                     to run when flame starts up.  If name is '' then all commands from the
                     given app instance are started."
        allows_empty: True
        default_value: []
        values:
            type: dict
            items:
                name: { type: str }
                app_instance: { type: str }

    context_menu:
        type: list
        description: "Controls the commands that show up in Flame's context menu. This is a list
                     where each element is a dictionary with two keys: 'app_instance' and 'name'.
                     The app_instance value connects this entry to a particular app instance defined
                     in the environment configuration file.  The name is the menu name of the
                     command to run when flame starts up.  If name is '' then all commands from the
                     given app instance are started."
        allows_empty: True                     
        default_value: []
        values:
            type: dict
            items:
                name: { type: str }
                app_instance: { type: str }

# the Shotgun fields that this engine needs in order to operate correctly
requires_shotgun_fields:

# More verbose description of this item 
display_name: "Shotgun Engine for Flame"
description: "Shotgun Integration in Flame"

# Required minimum versions for this item to run
requires_shotgun_version:
requires_core_version: "v0.14.76"

